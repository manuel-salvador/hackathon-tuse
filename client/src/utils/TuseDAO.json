{
  "address": "0xbb5c2F2f7F1049fd58c43de6E4002CD310aaF12A",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tuseNFT",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_votingDuration",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "_hasVoted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_proposalType",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        }
      ],
      "name": "createProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_proposalId",
          "type": "uint256"
        }
      ],
      "name": "executeProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "getProposalDescription",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "getProposalEndTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "getProposalExecuted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "getProposalProposer",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "getProposalVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "proposer",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "proposalType",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "votesFor",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "votesAgainst",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "executed",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "endTime",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proposalsNumber",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tuseNFT",
      "outputs": [
        {
          "internalType": "contract IERC721",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_proposalId",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "tokenIds",
          "type": "uint256[]"
        }
      ],
      "name": "vote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_proposalId",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "tokenIds",
          "type": "uint256[]"
        }
      ],
      "name": "voteAgainstProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "votingDuration",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x53ee4249fa428ae609914da1dce8f80f1e74e1c5010241a597f057eefd0e215f",
  "receipt": {
    "to": null,
    "from": "0xc3d2Cdd8b2D859fb31bcfa4cB30002487cebEBc3",
    "contractAddress": "0xbb5c2F2f7F1049fd58c43de6E4002CD310aaF12A",
    "transactionIndex": 29,
    "gasUsed": "1840801",
    "logsBloom": "0x
    "blockHash": "0xa8bc7e1b00c9ec725bf49c03516c33423940ad700e01d1debd18336d54a2505a",
    "transactionHash": "0x53ee4249fa428ae609914da1dce8f80f1e74e1c5010241a597f057eefd0e215f",
    "logs": [],
    "blockNumber": 8762094,
    "cumulativeGasUsed": "4962966",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x1F63F399Ed8d54c4DCf989BE9F0362777f1c4861",
    1000000
  ],
  "numDeployments": 1,
  "solcInputHash": "ebded668deb3024927e8e0a9336f0db1",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tuseNFT\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_votingDuration\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_hasVoted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_proposalType\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"}],\"name\":\"createProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"}],\"name\":\"executeProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"getProposalDescription\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"getProposalEndTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"getProposalExecuted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"getProposalProposer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"getProposalVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"proposalType\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"votesFor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votesAgainst\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalsNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tuseNFT\",\"outputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"voteAgainstProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TuseDAO.sol\":\"TuseDAO\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"contracts/TuseDAO.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\n\\ncontract TuseDAO {\\n    struct Proposal {\\n        uint256 id;\\n        address proposer;\\n        string proposalType;\\n        string description;\\n        uint256 votesFor;\\n        uint256 votesAgainst;\\n        bool executed;\\n        uint256 endTime;\\n    }\\n\\n    Proposal[] public proposals;\\n\\n    uint256 public proposalsNumber;\\n\\n    IERC721 public tuseNFT;\\n\\n    uint256 public votingDuration;\\n\\n    mapping (uint256 => mapping (uint256 => bool)) public _hasVoted;\\n\\n    constructor(address _tuseNFT, uint256 _votingDuration) {\\n        tuseNFT = IERC721(_tuseNFT);\\n        votingDuration = _votingDuration;\\n    }\\n\\n    function createProposal(\\n        string memory _proposalType, \\n        string memory _description\\n    ) external {\\n        uint256 proposalId = proposals.length;\\n        uint256 endTime = block.timestamp + votingDuration;\\n        proposals.push(Proposal(proposalId, msg.sender, _proposalType, _description, 0, 0, false, endTime));\\n        proposalsNumber += 1;\\n    }\\n\\n    function getProposalVotes(uint256 proposalId) external view returns (uint256, uint256) {\\n        return (\\n            proposals[proposalId].votesFor, \\n            proposals[proposalId].votesAgainst\\n        );\\n    }\\n\\n    function getProposalExecuted(uint256 proposalId) external view returns (bool) {\\n        return proposals[proposalId].executed;\\n    }\\n\\n    function getProposalDescription(uint256 proposalId) external view returns (string memory, string memory) {\\n        return (\\n            proposals[proposalId].description,\\n            proposals[proposalId].proposalType\\n        );\\n    }\\n\\n    function getProposalProposer(uint256 proposalId) external view returns (address) {\\n        return proposals[proposalId].proposer;\\n    }\\n\\n    function getProposalEndTime(uint256 proposalId) external view returns (uint256) {\\n        return proposals[proposalId].endTime;\\n    }\\n\\n    function vote(\\n        uint256 _proposalId, \\n        uint256[] memory tokenIds\\n    ) external {\\n        require(_proposalId < proposals.length, \\\"Invalid proposal ID\\\");\\n        require(tokenIds.length > 0, \\\"No TuseNFTs to vote with\\\");\\n\\n        uint256 votes = tokenIds.length;\\n\\n        Proposal storage proposal = proposals[_proposalId];\\n        require(!proposal.executed, \\\"Proposal already executed\\\");\\n        require(block.timestamp < proposal.endTime, \\\"Voting has ended\\\");\\n\\n\\n        for (uint256 n = 0; n < tokenIds.length; n++) {\\n            require(\\n                IERC721(tuseNFT).ownerOf(tokenIds[n]) == msg.sender, \\n                \\\"You are not the owner!\\\"\\n            );\\n            \\n            require(!_hasVoted[_proposalId][tokenIds[n]], \\\"Already voted!\\\");\\n            _hasVoted[_proposalId][tokenIds[n]] = true;\\n        }\\n\\n        proposal.votesFor += votes;\\n    }\\n\\n    function voteAgainstProposal(\\n        uint256 _proposalId, \\n        uint256[] memory tokenIds\\n    ) external {\\n        require(_proposalId < proposals.length, \\\"Invalid proposal ID\\\");\\n        require(tokenIds.length > 0, \\\"No TuseNFTs to vote with\\\");\\n\\n        uint256 votes = tokenIds.length;\\n\\n        Proposal storage proposal = proposals[_proposalId];\\n        require(!proposal.executed, \\\"Proposal already executed\\\");\\n        require(block.timestamp < proposal.endTime, \\\"Voting has ended\\\");\\n\\n\\n        for (uint256 n = 0; n < tokenIds.length; n++) {\\n            require(\\n                IERC721(tuseNFT).ownerOf(tokenIds[n]) == msg.sender, \\n                \\\"You are not the owner!\\\"\\n            );\\n            \\n            require(!_hasVoted[_proposalId][tokenIds[n]], \\\"Already voted!\\\");\\n            _hasVoted[_proposalId][tokenIds[n]] = true;\\n        }\\n\\n        proposal.votesAgainst += votes;\\n    }\\n\\n    function executeProposal(uint256 _proposalId) external {\\n        require(_proposalId < proposals.length, \\\"Invalid proposal ID\\\");\\n\\n        Proposal storage proposal = proposals[_proposalId];\\n        require(!proposal.executed, \\\"Proposal already executed\\\");\\n        require(block.timestamp >= proposal.endTime, \\\"Voting has not ended yet\\\");\\n        require(proposal.votesFor > proposal.votesAgainst, \\\"Proposal was not approved by majority\\\");\\n        proposal.executed = true;\\n        // Ejecutar la propuesta\\n    }\\n}\\n\",\"keccak256\":\"0xb85706880f2e4f99d16c0885ffc14fff576c5b0e4a7d5916e8dff0becec75401\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100ea5760003560e01c80635d5889421161008c5780637055d368116100665780637055d3681461028c5780639949d156146102a85780639b148052146102d8578063d27d1bc4146102f4576100ea565b80635d588942146102105780635f90af2a1461024057806365e481e214610270576100ea565b80631bd85e30116100c85780631bd85e3014610160578063229acb171461019057806347c66140146101c15780634e9e2c4a146101f2576100ea565b8063013cf08b146100ef5780630d61b51914610126578063132002fc14610142575b600080fd5b610109600480360381019061010491906111e0565b610312565b60405161011d989796959493929190611308565b60405180910390f35b610140600480360381019061013b91906111e0565b6104a7565b005b61014a610617565b6040516101579190611394565b60405180910390f35b61017a600480360381019061017591906111e0565b61061d565b60405161018791906113af565b60405180910390f35b6101aa60048036038101906101a591906111e0565b610658565b6040516101b89291906113ca565b60405180910390f35b6101db60048036038101906101d691906111e0565b6107c6565b6040516101e9929190611401565b60405180910390f35b6101fa61081e565b6040516102079190611489565b60405180910390f35b61022a600480360381019061022591906114a4565b610844565b60405161023791906113af565b60405180910390f35b61025a600480360381019061025591906111e0565b610873565b60405161026791906114e4565b60405180910390f35b61028a60048036038101906102859190611634565b6108c1565b005b6102a660048036038101906102a19190611774565b610a38565b005b6102c260048036038101906102bd91906111e0565b610dcd565b6040516102cf9190611394565b60405180910390f35b6102f260048036038101906102ed9190611774565b610dfb565b005b6102fc611190565b6040516103099190611394565b60405180910390f35b6000818154811061032257600080fd5b90600052602060002090600802016000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806002018054610371906117ff565b80601f016020809104026020016040519081016040528092919081815260200182805461039d906117ff565b80156103ea5780601f106103bf576101008083540402835291602001916103ea565b820191906000526020600020905b8154815290600101906020018083116103cd57829003601f168201915b5050505050908060030180546103ff906117ff565b80601f016020809104026020016040519081016040528092919081815260200182805461042b906117ff565b80156104785780601f1061044d57610100808354040283529160200191610478565b820191906000526020600020905b81548152906001019060200180831161045b57829003601f168201915b5050505050908060040154908060050154908060060160009054906101000a900460ff16908060070154905088565b60008054905081106104ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e59061187c565b60405180910390fd5b60008082815481106105035761050261189c565b5b906000526020600020906008020190508060060160009054906101000a900460ff1615610565576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055c90611917565b60405180910390fd5b80600701544210156105ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a390611983565b60405180910390fd5b80600501548160040154116105f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ed90611a15565b60405180910390fd5b60018160060160006101000a81548160ff0219169083151502179055505050565b60035481565b60008082815481106106325761063161189c565b5b906000526020600020906008020160060160009054906101000a900460ff169050919050565b6060806000838154811061066f5761066e61189c565b5b9060005260206000209060080201600301600084815481106106945761069361189c565b5b90600052602060002090600802016002018180546106b1906117ff565b80601f01602080910402602001604051908101604052809291908181526020018280546106dd906117ff565b801561072a5780601f106106ff5761010080835404028352916020019161072a565b820191906000526020600020905b81548152906001019060200180831161070d57829003601f168201915b5050505050915080805461073d906117ff565b80601f0160208091040260200160405190810160405280929190818152602001828054610769906117ff565b80156107b65780601f1061078b576101008083540402835291602001916107b6565b820191906000526020600020905b81548152906001019060200180831161079957829003601f168201915b5050505050905091509150915091565b600080600083815481106107dd576107dc61189c565b5b906000526020600020906008020160040154600084815481106108035761080261189c565b5b90600052602060002090600802016005015491509150915091565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60046020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b60008082815481106108885761088761189c565b5b906000526020600020906008020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000808054905090506000600354426108da9190611a64565b905060006040518061010001604052808481526020013373ffffffffffffffffffffffffffffffffffffffff16815260200186815260200185815260200160008152602001600081526020016000151581526020018381525090806001815401808255809150506001900390600052602060002090600802016000909190919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020190816109c29190611c3a565b5060608201518160030190816109d89190611c3a565b506080820151816004015560a0820151816005015560c08201518160060160006101000a81548160ff02191690831515021790555060e0820151816007015550506001806000828254610a2b9190611a64565b9250508190555050505050565b6000805490508210610a7f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a769061187c565b60405180910390fd5b6000815111610ac3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aba90611d58565b60405180910390fd5b6000815190506000808481548110610ade57610add61189c565b5b906000526020600020906008020190508060060160009054906101000a900460ff1615610b40576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b3790611917565b60405180910390fd5b80600701544210610b86576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b7d90611dc4565b60405180910390fd5b60005b8351811015610dab573373ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e868481518110610bfa57610bf961189c565b5b60200260200101516040518263ffffffff1660e01b8152600401610c1e9190611394565b602060405180830381865afa158015610c3b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c5f9190611e10565b73ffffffffffffffffffffffffffffffffffffffff1614610cb5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cac90611e89565b60405180910390fd5b600460008681526020019081526020016000206000858381518110610cdd57610cdc61189c565b5b6020026020010151815260200190815260200160002060009054906101000a900460ff1615610d41576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d3890611ef5565b60405180910390fd5b6001600460008781526020019081526020016000206000868481518110610d6b57610d6a61189c565b5b6020026020010151815260200190815260200160002060006101000a81548160ff0219169083151502179055508080610da390611f15565b915050610b89565b5081816004016000828254610dc09190611a64565b9250508190555050505050565b6000808281548110610de257610de161189c565b5b9060005260206000209060080201600701549050919050565b6000805490508210610e42576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e399061187c565b60405180910390fd5b6000815111610e86576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e7d90611d58565b60405180910390fd5b6000815190506000808481548110610ea157610ea061189c565b5b906000526020600020906008020190508060060160009054906101000a900460ff1615610f03576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610efa90611917565b60405180910390fd5b80600701544210610f49576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f4090611dc4565b60405180910390fd5b60005b835181101561116e573373ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e868481518110610fbd57610fbc61189c565b5b60200260200101516040518263ffffffff1660e01b8152600401610fe19190611394565b602060405180830381865afa158015610ffe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110229190611e10565b73ffffffffffffffffffffffffffffffffffffffff1614611078576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161106f90611e89565b60405180910390fd5b6004600086815260200190815260200160002060008583815181106110a05761109f61189c565b5b6020026020010151815260200190815260200160002060009054906101000a900460ff1615611104576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110fb90611ef5565b60405180910390fd5b600160046000878152602001908152602001600020600086848151811061112e5761112d61189c565b5b6020026020010151815260200190815260200160002060006101000a81548160ff021916908315150217905550808061116690611f15565b915050610f4c565b50818160050160008282546111839190611a64565b9250508190555050505050565b60015481565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b6111bd816111aa565b81146111c857600080fd5b50565b6000813590506111da816111b4565b92915050565b6000602082840312156111f6576111f56111a0565b5b6000611204848285016111cb565b91505092915050565b611216816111aa565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006112478261121c565b9050919050565b6112578161123c565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561129757808201518184015260208101905061127c565b60008484015250505050565b6000601f19601f8301169050919050565b60006112bf8261125d565b6112c98185611268565b93506112d9818560208601611279565b6112e2816112a3565b840191505092915050565b60008115159050919050565b611302816112ed565b82525050565b60006101008201905061131e600083018b61120d565b61132b602083018a61124e565b818103604083015261133d81896112b4565b9050818103606083015261135181886112b4565b9050611360608083018761120d565b61136d60a083018661120d565b61137a60c08301856112f9565b61138760e083018461120d565b9998505050505050505050565b60006020820190506113a9600083018461120d565b92915050565b60006020820190506113c460008301846112f9565b92915050565b600060408201905081810360008301526113e481856112b4565b905081810360208301526113f881846112b4565b90509392505050565b6000604082019050611416600083018561120d565b611423602083018461120d565b9392505050565b6000819050919050565b600061144f61144a6114458461121c565b61142a565b61121c565b9050919050565b600061146182611434565b9050919050565b600061147382611456565b9050919050565b61148381611468565b82525050565b600060208201905061149e600083018461147a565b92915050565b600080604083850312156114bb576114ba6111a0565b5b60006114c9858286016111cb565b92505060206114da858286016111cb565b9150509250929050565b60006020820190506114f9600083018461124e565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611541826112a3565b810181811067ffffffffffffffff821117156115605761155f611509565b5b80604052505050565b6000611573611196565b905061157f8282611538565b919050565b600067ffffffffffffffff82111561159f5761159e611509565b5b6115a8826112a3565b9050602081019050919050565b82818337600083830152505050565b60006115d76115d284611584565b611569565b9050828152602081018484840111156115f3576115f2611504565b5b6115fe8482856115b5565b509392505050565b600082601f83011261161b5761161a6114ff565b5b813561162b8482602086016115c4565b91505092915050565b6000806040838503121561164b5761164a6111a0565b5b600083013567ffffffffffffffff811115611669576116686111a5565b5b61167585828601611606565b925050602083013567ffffffffffffffff811115611696576116956111a5565b5b6116a285828601611606565b9150509250929050565b600067ffffffffffffffff8211156116c7576116c6611509565b5b602082029050602081019050919050565b600080fd5b60006116f06116eb846116ac565b611569565b90508083825260208201905060208402830185811115611713576117126116d8565b5b835b8181101561173c578061172888826111cb565b845260208401935050602081019050611715565b5050509392505050565b600082601f83011261175b5761175a6114ff565b5b813561176b8482602086016116dd565b91505092915050565b6000806040838503121561178b5761178a6111a0565b5b6000611799858286016111cb565b925050602083013567ffffffffffffffff8111156117ba576117b96111a5565b5b6117c685828601611746565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061181757607f821691505b60208210810361182a576118296117d0565b5b50919050565b7f496e76616c69642070726f706f73616c20494400000000000000000000000000600082015250565b6000611866601383611268565b915061187182611830565b602082019050919050565b6000602082019050818103600083015261189581611859565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f50726f706f73616c20616c726561647920657865637574656400000000000000600082015250565b6000611901601983611268565b915061190c826118cb565b602082019050919050565b60006020820190508181036000830152611930816118f4565b9050919050565b7f566f74696e6720686173206e6f7420656e646564207965740000000000000000600082015250565b600061196d601883611268565b915061197882611937565b602082019050919050565b6000602082019050818103600083015261199c81611960565b9050919050565b7f50726f706f73616c20776173206e6f7420617070726f766564206279206d616a60008201527f6f72697479000000000000000000000000000000000000000000000000000000602082015250565b60006119ff602583611268565b9150611a0a826119a3565b604082019050919050565b60006020820190508181036000830152611a2e816119f2565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611a6f826111aa565b9150611a7a836111aa565b9250828201905080821115611a9257611a91611a35565b5b92915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302611afa7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611abd565b611b048683611abd565b95508019841693508086168417925050509392505050565b6000611b37611b32611b2d846111aa565b61142a565b6111aa565b9050919050565b6000819050919050565b611b5183611b1c565b611b65611b5d82611b3e565b848454611aca565b825550505050565b600090565b611b7a611b6d565b611b85818484611b48565b505050565b5b81811015611ba957611b9e600082611b72565b600181019050611b8b565b5050565b601f821115611bee57611bbf81611a98565b611bc884611aad565b81016020851015611bd7578190505b611beb611be385611aad565b830182611b8a565b50505b505050565b600082821c905092915050565b6000611c1160001984600802611bf3565b1980831691505092915050565b6000611c2a8383611c00565b9150826002028217905092915050565b611c438261125d565b67ffffffffffffffff811115611c5c57611c5b611509565b5b611c6682546117ff565b611c71828285611bad565b600060209050601f831160018114611ca45760008415611c92578287015190505b611c9c8582611c1e565b865550611d04565b601f198416611cb286611a98565b60005b82811015611cda57848901518255600182019150602085019450602081019050611cb5565b86831015611cf75784890151611cf3601f891682611c00565b8355505b6001600288020188555050505b505050505050565b7f4e6f20547573654e46547320746f20766f746520776974680000000000000000600082015250565b6000611d42601883611268565b9150611d4d82611d0c565b602082019050919050565b60006020820190508181036000830152611d7181611d35565b9050919050565b7f566f74696e672068617320656e64656400000000000000000000000000000000600082015250565b6000611dae601083611268565b9150611db982611d78565b602082019050919050565b60006020820190508181036000830152611ddd81611da1565b9050919050565b611ded8161123c565b8114611df857600080fd5b50565b600081519050611e0a81611de4565b92915050565b600060208284031215611e2657611e256111a0565b5b6000611e3484828501611dfb565b91505092915050565b7f596f7520617265206e6f7420746865206f776e65722100000000000000000000600082015250565b6000611e73601683611268565b9150611e7e82611e3d565b602082019050919050565b60006020820190508181036000830152611ea281611e66565b9050919050565b7f416c726561647920766f74656421000000000000000000000000000000000000600082015250565b6000611edf600e83611268565b9150611eea82611ea9565b602082019050919050565b60006020820190508181036000830152611f0e81611ed2565b9050919050565b6000611f20826111aa565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611f5257611f51611a35565b5b60018201905091905056fea264697066735822122091c9f801eba73981d8f62f6a3384a984217481cfb388a6d2078a38f36a8b0c4764736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 151,
        "contract": "contracts/TuseDAO.sol:TuseDAO",
        "label": "proposals",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_struct(Proposal)147_storage)dyn_storage"
      },
      {
        "astId": 153,
        "contract": "contracts/TuseDAO.sol:TuseDAO",
        "label": "proposalsNumber",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 156,
        "contract": "contracts/TuseDAO.sol:TuseDAO",
        "label": "tuseNFT",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(IERC721)115"
      },
      {
        "astId": 158,
        "contract": "contracts/TuseDAO.sol:TuseDAO",
        "label": "votingDuration",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 164,
        "contract": "contracts/TuseDAO.sol:TuseDAO",
        "label": "_hasVoted",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(Proposal)147_storage)dyn_storage": {
        "base": "t_struct(Proposal)147_storage",
        "encoding": "dynamic_array",
        "label": "struct TuseDAO.Proposal[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IERC721)115": {
        "encoding": "inplace",
        "label": "contract IERC721",
        "numberOfBytes": "20"
      },
      "t_mapping(t_uint256,t_bool)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(uint256 => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_bool)"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Proposal)147_storage": {
        "encoding": "inplace",
        "label": "struct TuseDAO.Proposal",
        "members": [
          {
            "astId": 132,
            "contract": "contracts/TuseDAO.sol:TuseDAO",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 134,
            "contract": "contracts/TuseDAO.sol:TuseDAO",
            "label": "proposer",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 136,
            "contract": "contracts/TuseDAO.sol:TuseDAO",
            "label": "proposalType",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 138,
            "contract": "contracts/TuseDAO.sol:TuseDAO",
            "label": "description",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          },
          {
            "astId": 140,
            "contract": "contracts/TuseDAO.sol:TuseDAO",
            "label": "votesFor",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 142,
            "contract": "contracts/TuseDAO.sol:TuseDAO",
            "label": "votesAgainst",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 144,
            "contract": "contracts/TuseDAO.sol:TuseDAO",
            "label": "executed",
            "offset": 0,
            "slot": "6",
            "type": "t_bool"
          },
          {
            "astId": 146,
            "contract": "contracts/TuseDAO.sol:TuseDAO",
            "label": "endTime",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}